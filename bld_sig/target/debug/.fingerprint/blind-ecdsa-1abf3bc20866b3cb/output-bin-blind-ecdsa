{"message":"unused `#[macro_use]` import","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":105,"byte_end":117,"line_start":6,"line_end":6,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"#[macro_use]","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused `#[macro_use]` import\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[macro_use]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::ErrorReason`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":236,"byte_end":272,"line_start":12,"line_end":12,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use class_group::primitives::ErrorReason;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":232,"byte_end":273,"line_start":12,"line_end":12,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use class_group::primitives::ErrorReason;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::ErrorReason`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::ErrorReason;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::cl_dl_lcm::jacobi`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":278,"byte_end":320,"line_start":13,"line_end":13,"column_start":5,"column_end":47,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::jacobi;","highlight_start":5,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":274,"byte_end":321,"line_start":13,"line_end":13,"column_start":1,"column_end":48,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::jacobi;","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::cl_dl_lcm::jacobi`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::cl_dl_lcm::jacobi;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::cl_dl_lcm::PK`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":373,"byte_end":411,"line_start":15,"line_end":15,"column_start":5,"column_end":43,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::PK;","highlight_start":5,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":369,"byte_end":412,"line_start":15,"line_end":15,"column_start":1,"column_end":44,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::PK;","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::cl_dl_lcm::PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::cl_dl_lcm::PK;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::cl_dl_lcm::next_probable_small_prime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":417,"byte_end":478,"line_start":16,"line_end":16,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::next_probable_small_prime;","highlight_start":5,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":413,"byte_end":479,"line_start":16,"line_end":16,"column_start":1,"column_end":67,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::next_probable_small_prime;","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::cl_dl_lcm::next_probable_small_prime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::cl_dl_lcm::next_probable_small_prime;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::cl_dl_lcm::next_probable_prime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":484,"byte_end":539,"line_start":17,"line_end":17,"column_start":5,"column_end":60,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::next_probable_prime;","highlight_start":5,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":480,"byte_end":540,"line_start":17,"line_end":17,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::next_probable_prime;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::cl_dl_lcm::next_probable_prime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::cl_dl_lcm::next_probable_prime;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::bn_to_gen`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":545,"byte_end":567,"line_start":18,"line_end":18,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use class_group::bn_to_gen;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":541,"byte_end":568,"line_start":18,"line_end":18,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use class_group::bn_to_gen;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::bn_to_gen`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::bn_to_gen;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::isprime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":573,"byte_end":593,"line_start":19,"line_end":19,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use class_group::isprime;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":569,"byte_end":594,"line_start":19,"line_end":19,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"use class_group::isprime;","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::isprime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::isprime;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::is_prime`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":627,"byte_end":660,"line_start":21,"line_end":21,"column_start":5,"column_end":38,"is_primary":true,"text":[{"text":"use class_group::primitives::is_prime;","highlight_start":5,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":623,"byte_end":661,"line_start":21,"line_end":21,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use class_group::primitives::is_prime;","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::is_prime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:21:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::is_prime;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::BinaryQF`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":666,"byte_end":687,"line_start":22,"line_end":22,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use class_group::BinaryQF;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":662,"byte_end":688,"line_start":22,"line_end":22,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use class_group::BinaryQF;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::BinaryQF`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::BinaryQF;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::numerical_log`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":693,"byte_end":731,"line_start":23,"line_end":23,"column_start":5,"column_end":43,"is_primary":true,"text":[{"text":"use class_group::primitives::numerical_log;","highlight_start":5,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":689,"byte_end":732,"line_start":23,"line_end":23,"column_start":1,"column_end":44,"is_primary":true,"text":[{"text":"use class_group::primitives::numerical_log;","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::numerical_log`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::numerical_log;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::prng`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":737,"byte_end":766,"line_start":24,"line_end":24,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"use class_group::primitives::prng;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":733,"byte_end":767,"line_start":24,"line_end":24,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use class_group::primitives::prng;","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::prng`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::prng;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `curv::arithmetic::traits::Modulo`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":772,"byte_end":804,"line_start":25,"line_end":25,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use curv::arithmetic::traits::Modulo;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":768,"byte_end":805,"line_start":25,"line_end":25,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use curv::arithmetic::traits::Modulo;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `curv::arithmetic::traits::Modulo`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:25:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse curv::arithmetic::traits::Modulo;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `curv::cryptographic_primitives::hashing::hash_sha256::HSha256`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":910,"byte_end":971,"line_start":28,"line_end":28,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"use curv::cryptographic_primitives::hashing::hash_sha256::HSha256;","highlight_start":5,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":906,"byte_end":972,"line_start":28,"line_end":28,"column_start":1,"column_end":67,"is_primary":true,"text":[{"text":"use curv::cryptographic_primitives::hashing::hash_sha256::HSha256;","highlight_start":1,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `curv::cryptographic_primitives::hashing::hash_sha256::HSha256`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:28:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse curv::cryptographic_primitives::hashing::hash_sha256::HSha256;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::os::raw::c_int`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1072,"byte_end":1091,"line_start":32,"line_end":32,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use std::os::raw::c_int;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1068,"byte_end":1092,"line_start":32,"line_end":32,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"use std::os::raw::c_int;","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::os::raw::c_int`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::os::raw::c_int;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `paillier::keygen::PrimeSampable`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1097,"byte_end":1128,"line_start":33,"line_end":33,"column_start":5,"column_end":36,"is_primary":true,"text":[{"text":"use paillier::keygen::PrimeSampable;","highlight_start":5,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1093,"byte_end":1129,"line_start":33,"line_end":33,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use paillier::keygen::PrimeSampable;","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `paillier::keygen::PrimeSampable`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse paillier::keygen::PrimeSampable;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `ZK_AsiaCCS_19` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":297,"byte_end":310,"line_start":10,"line_end":10,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"pub struct ZK_AsiaCCS_19{","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":297,"byte_end":310,"line_start":10,"line_end":10,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"pub struct ZK_AsiaCCS_19{","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"ZkAsiaCcs19","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `ZK_AsiaCCS_19` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:10:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct ZK_AsiaCCS_19{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ZkAsiaCcs19`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"type `zkPoKEncProof_v0` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":639,"byte_end":655,"line_start":17,"line_end":17,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct zkPoKEncProof_v0 {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":639,"byte_end":655,"line_start":17,"line_end":17,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct zkPoKEncProof_v0 {","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"ZkPoKencProofV0","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `zkPoKEncProof_v0` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:17:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct zkPoKEncProof_v0 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ZkPoKencProofV0`\u001b[0m\n\n"}
{"message":"type `zkPoKEncProof` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1203,"byte_end":1216,"line_start":51,"line_end":51,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"pub struct zkPoKEncProof {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1203,"byte_end":1216,"line_start":51,"line_end":51,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"pub struct zkPoKEncProof {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"ZkPoKencProof","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `zkPoKEncProof` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:51:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct zkPoKEncProof {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ZkPoKencProof`\u001b[0m\n\n"}
{"message":"type `Pallier_AsiaCCS_19` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":226,"byte_end":244,"line_start":9,"line_end":9,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"pub struct Pallier_AsiaCCS_19{","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":226,"byte_end":244,"line_start":9,"line_end":9,"column_start":12,"column_end":30,"is_primary":true,"text":[{"text":"pub struct Pallier_AsiaCCS_19{","highlight_start":12,"highlight_end":30}],"label":null,"suggested_replacement":"PallierAsiaCcs19","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `Pallier_AsiaCCS_19` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:9:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct Pallier_AsiaCCS_19{\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PallierAsiaCcs19`\u001b[0m\n\n"}
{"message":"unused import: `class_group::primitives::cl_dl_lcm::HSMCL`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18,"byte_end":59,"line_start":2,"line_end":2,"column_start":5,"column_end":46,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::HSMCL;","highlight_start":5,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":47,"is_primary":true,"text":[{"text":"use class_group::primitives::cl_dl_lcm::HSMCL;","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `class_group::primitives::cl_dl_lcm::HSMCL`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse class_group::primitives::cl_dl_lcm::HSMCL;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `curv::cryptographic_primitives::hashing::traits::Hash`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":65,"byte_end":118,"line_start":3,"line_end":3,"column_start":5,"column_end":58,"is_primary":true,"text":[{"text":"use curv::cryptographic_primitives::hashing::traits::Hash;","highlight_start":5,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":61,"byte_end":119,"line_start":3,"line_end":3,"column_start":1,"column_end":59,"is_primary":true,"text":[{"text":"use curv::cryptographic_primitives::hashing::traits::Hash;","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `curv::cryptographic_primitives::hashing::traits::Hash`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse curv::cryptographic_primitives::hashing::traits::Hash;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `curv::arithmetic::traits::Samplable`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":124,"byte_end":159,"line_start":4,"line_end":4,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use curv::arithmetic::traits::Samplable;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":120,"byte_end":160,"line_start":4,"line_end":4,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"use curv::arithmetic::traits::Samplable;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `curv::arithmetic::traits::Samplable`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse curv::arithmetic::traits::Samplable;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `ECPoint`, `ECScalar`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":198,"byte_end":205,"line_start":5,"line_end":5,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"use curv::elliptic::curves::traits::{ECPoint, ECScalar};","highlight_start":38,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/benches/zk_bench.rs","byte_start":207,"byte_end":215,"line_start":5,"line_end":5,"column_start":47,"column_end":55,"is_primary":true,"text":[{"text":"use curv::elliptic::curves::traits::{ECPoint, ECScalar};","highlight_start":47,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":161,"byte_end":217,"line_start":5,"line_end":5,"column_start":1,"column_end":57,"is_primary":true,"text":[{"text":"use curv::elliptic::curves::traits::{ECPoint, ECScalar};","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ECPoint`, `ECScalar`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:5:38\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse curv::elliptic::curves::traits::{ECPoint, ECScalar};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `FE`, `GE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":229,"byte_end":231,"line_start":6,"line_end":6,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"use curv::{FE, GE};","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/benches/zk_bench.rs","byte_start":233,"byte_end":235,"line_start":6,"line_end":6,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"use curv::{FE, GE};","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":218,"byte_end":237,"line_start":6,"line_end":6,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"use curv::{FE, GE};","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `FE`, `GE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:6:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse curv::{FE, GE};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\n"}
{"message":"unused import: `protocols::mpaillier::Pallier_AsiaCCS_19`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":242,"byte_end":282,"line_start":7,"line_end":7,"column_start":5,"column_end":45,"is_primary":true,"text":[{"text":"use protocols::mpaillier::Pallier_AsiaCCS_19;","highlight_start":5,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":238,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":46,"is_primary":true,"text":[{"text":"use protocols::mpaillier::Pallier_AsiaCCS_19;","highlight_start":1,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `protocols::mpaillier::Pallier_AsiaCCS_19`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse protocols::mpaillier::Pallier_AsiaCCS_19;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `protocols::asiaccs_zk::ZK_AsiaCCS_19`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":288,"byte_end":324,"line_start":8,"line_end":8,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use protocols::asiaccs_zk::ZK_AsiaCCS_19;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":284,"byte_end":325,"line_start":8,"line_end":8,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use protocols::asiaccs_zk::ZK_AsiaCCS_19;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `protocols::asiaccs_zk::ZK_AsiaCCS_19`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse protocols::asiaccs_zk::ZK_AsiaCCS_19;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `protocols::ggm_zk::zkPoKEncProof_v0`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":330,"byte_end":365,"line_start":9,"line_end":9,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"use protocols::ggm_zk::zkPoKEncProof_v0;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":326,"byte_end":366,"line_start":9,"line_end":9,"column_start":1,"column_end":41,"is_primary":true,"text":[{"text":"use protocols::ggm_zk::zkPoKEncProof_v0;","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `protocols::ggm_zk::zkPoKEncProof_v0`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse protocols::ggm_zk::zkPoKEncProof_v0;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `protocols::ggm_zk::zkPoKEncProof`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":371,"byte_end":403,"line_start":10,"line_end":10,"column_start":5,"column_end":37,"is_primary":true,"text":[{"text":"use protocols::ggm_zk::zkPoKEncProof;","highlight_start":5,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":367,"byte_end":404,"line_start":10,"line_end":10,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"use protocols::ggm_zk::zkPoKEncProof;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `protocols::ggm_zk::zkPoKEncProof`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse protocols::ggm_zk::zkPoKEncProof;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `test::Bencher`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":410,"byte_end":423,"line_start":12,"line_end":12,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use test::Bencher;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":406,"byte_end":424,"line_start":12,"line_end":12,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use test::Bencher;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `test::Bencher`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse test::Bencher;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `flag`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3032,"byte_end":3040,"line_start":88,"line_end":88,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut flag = true;","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3032,"byte_end":3040,"line_start":88,"line_end":88,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut flag = true;","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"_flag","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `flag`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut flag = true;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_flag`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `e_h`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3681,"byte_end":3684,"line_start":144,"line_end":144,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_h = u_h.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3681,"byte_end":3684,"line_start":144,"line_end":144,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_h = u_h.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_e_h","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_h`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:144:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let e_h = u_h.mod_floor(&hsmcl.pk.q);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_h`\u001b[0m\n\n"}
{"message":"unused variable: `e_x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3727,"byte_end":3730,"line_start":145,"line_end":145,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_x = u_x.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3727,"byte_end":3730,"line_start":145,"line_end":145,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_x = u_x.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_e_x","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:145:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let e_x = u_x.mod_floor(&hsmcl.pk.q);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_x`\u001b[0m\n\n"}
{"message":"unused variable: `g`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1873,"byte_end":1874,"line_start":92,"line_end":92,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn prove(g: GE, ","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1873,"byte_end":1874,"line_start":92,"line_end":92,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"    pub fn prove(g: GE, ","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":"_g","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `g`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:92:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn prove(g: GE, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_g`\u001b[0m\n\n"}
{"message":"unused variable: `c_bias_fe`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":6119,"byte_end":6128,"line_start":238,"line_end":238,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let c_bias_fe: FE = ECScalar::from(&(c.clone() + BigInt::one()));","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":6119,"byte_end":6128,"line_start":238,"line_end":238,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let c_bias_fe: FE = ECScalar::from(&(c.clone() + BigInt::one()));","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_c_bias_fe","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `c_bias_fe`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:238:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let c_bias_fe: FE = ECScalar::from(&(c.clone() + BigInt::one()));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_c_bias_fe`\u001b[0m\n\n"}
{"message":"unused variable: `e_h`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12611,"byte_end":12614,"line_start":424,"line_end":424,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_h = u_h.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12611,"byte_end":12614,"line_start":424,"line_end":424,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_h = u_h.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_e_h","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_h`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:424:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m424\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let e_h = u_h.mod_floor(&hsmcl.pk.q);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_h`\u001b[0m\n\n"}
{"message":"unused variable: `e_x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12657,"byte_end":12660,"line_start":425,"line_end":425,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_x = u_x.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12657,"byte_end":12660,"line_start":425,"line_end":425,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let e_x = u_x.mod_floor(&hsmcl.pk.q);","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_e_x","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `e_x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:425:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let e_x = u_x.mod_floor(&hsmcl.pk.q);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_e_x`\u001b[0m\n\n"}
{"message":"unused variable: `q`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1426,"byte_end":1427,"line_start":56,"line_end":56,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        q: &BigInt,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1426,"byte_end":1427,"line_start":56,"line_end":56,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        q: &BigInt,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"_q","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `q`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:56:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        q: &BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_q`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3032,"byte_end":3040,"line_start":88,"line_end":88,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut flag = true;","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3032,"byte_end":3036,"line_start":88,"line_end":88,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut flag = true;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:88:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut flag = true;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_prove_2048`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":642,"byte_end":665,"line_start":22,"line_end":22,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_prove_2048`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_prove_3072`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":1595,"byte_end":1618,"line_start":48,"line_end":48,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_prove_3072`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:48:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_prove_4096`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":2548,"byte_end":2571,"line_start":74,"line_end":74,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_prove_4096`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:74:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_verify_2048`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":3502,"byte_end":3526,"line_start":101,"line_end":101,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_verify_2048`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:101:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_verify_3072`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":4430,"byte_end":4454,"line_start":126,"line_end":126,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_verify_3072`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:126:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_verify_4096`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":5358,"byte_end":5382,"line_start":151,"line_end":151,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_verify_4096`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:151:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_112`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":6287,"byte_end":6307,"line_start":177,"line_end":177,"column_start":12,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_112(c: &mut Criterion) {","highlight_start":12,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_112`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:177:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_112(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_128`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":8619,"byte_end":8639,"line_start":231,"line_end":231,"column_start":12,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_128(c: &mut Criterion) {","highlight_start":12,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_128`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:231:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_128(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_112`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10950,"byte_end":10971,"line_start":284,"line_end":284,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_112(c: &mut Criterion) {","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_112`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:284:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_112(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_128`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":13230,"byte_end":13251,"line_start":336,"line_end":336,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_128(c: &mut Criterion) {","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_128`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:336:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_128(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_112_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":15509,"byte_end":15532,"line_start":386,"line_end":386,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_112_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_112_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:386:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m386\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_112_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_128_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":17659,"byte_end":17682,"line_start":435,"line_end":435,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_128_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_128_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:435:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_128_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_112_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":19808,"byte_end":19832,"line_start":483,"line_end":483,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_112_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_112_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:483:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m483\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_112_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_128_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":21914,"byte_end":21938,"line_start":530,"line_end":530,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_128_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_128_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:530:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_128_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"structure field `C` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":320,"byte_end":321,"line_start":11,"line_end":11,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub C: BigInt, //ciphertext C = g^m r^N mod N^2","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":320,"byte_end":321,"line_start":11,"line_end":11,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub C: BigInt, //ciphertext C = g^m r^N mod N^2","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"c","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `C` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:11:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub C: BigInt, //ciphertext C = g^m r^N mod N^2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `c`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"structure field `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":372,"byte_end":373,"line_start":12,"line_end":12,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub N: BigInt, ","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":372,"byte_end":373,"line_start":12,"line_end":12,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub N: BigInt, ","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:12:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub N: BigInt, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"structure field `N_square` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":392,"byte_end":400,"line_start":13,"line_end":13,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    pub N_square: BigInt,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":392,"byte_end":400,"line_start":13,"line_end":13,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    pub N_square: BigInt,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"n_square","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `N_square` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:13:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub N_square: BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_square`\u001b[0m\n\n"}
{"message":"structure field `C1_vec` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":434,"byte_end":440,"line_start":15,"line_end":15,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    C1_vec: Vec<BigInt>, // commit C1 = g^m1 r1^N mod N^2","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":434,"byte_end":440,"line_start":15,"line_end":15,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    C1_vec: Vec<BigInt>, // commit C1 = g^m1 r1^N mod N^2","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":"c1_vec","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `C1_vec` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    C1_vec: Vec<BigInt>, // commit C1 = g^m1 r1^N mod N^2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `c1_vec`\u001b[0m\n\n"}
{"message":"structure field `Response_vec` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":492,"byte_end":504,"line_start":16,"line_end":16,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    Response_vec: Vec<Response>, // response m2 = m1 + b * m and r2 = r1 + b * r","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":492,"byte_end":504,"line_start":16,"line_end":16,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    Response_vec: Vec<Response>, // response m2 = m1 + b * m and r2 = r1 + b * r","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"response_vec","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Response_vec` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Response_vec: Vec<Response>, // response m2 = m1 + b * m and r2 = r1 + b * r\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `response_vec`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":622,"byte_end":623,"line_start":21,"line_end":21,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            N: BigInt, ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":622,"byte_end":623,"line_start":21,"line_end":21,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            N: BigInt, ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:21:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            N: BigInt, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `N_square` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":646,"byte_end":654,"line_start":22,"line_end":22,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            N_square: BigInt,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":646,"byte_end":654,"line_start":22,"line_end":22,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            N_square: BigInt,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"n_square","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N_square` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:22:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            N_square: BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_square`\u001b[0m\n\n"}
{"message":"variable `r1N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1157,"byte_end":1160,"line_start":36,"line_end":36,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                let r1N = r1.powm(&N, &N_square);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1157,"byte_end":1160,"line_start":36,"line_end":36,"column_start":21,"column_end":24,"is_primary":true,"text":[{"text":"                let r1N = r1.powm(&N, &N_square);","highlight_start":21,"highlight_end":24}],"label":null,"suggested_replacement":"r1_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `r1N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:36:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let r1N = r1.powm(&N, &N_square);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r1_n`\u001b[0m\n\n"}
{"message":"variable `gm1r1N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1207,"byte_end":1213,"line_start":37,"line_end":37,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                let gm1r1N = &gm1 * &r1N;","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1207,"byte_end":1213,"line_start":37,"line_end":37,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"                let gm1r1N = &gm1 * &r1N;","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":"gm1r1_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gm1r1N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:37:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let gm1r1N = &gm1 * &r1N;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gm1r1_n`\u001b[0m\n\n"}
{"message":"variable `C1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1249,"byte_end":1251,"line_start":38,"line_end":38,"column_start":21,"column_end":23,"is_primary":true,"text":[{"text":"                let C1 = gm1r1N.mod_floor(&N_square); // C'","highlight_start":21,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1249,"byte_end":1251,"line_start":38,"line_end":38,"column_start":21,"column_end":23,"is_primary":true,"text":[{"text":"                let C1 = gm1r1N.mod_floor(&N_square); // C'","highlight_start":21,"highlight_end":23}],"label":null,"suggested_replacement":"c1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `C1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:38:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                let C1 = gm1r1N.mod_floor(&N_square); // C'\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `c1`\u001b[0m\n\n"}
{"message":"variable `C1_and_fs_and_m2_r2_vec` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":917,"byte_end":940,"line_start":31,"line_end":31,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"        let C1_and_fs_and_m2_r2_vec = (0..repeat)","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":917,"byte_end":940,"line_start":31,"line_end":31,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"        let C1_and_fs_and_m2_r2_vec = (0..repeat)","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"c1_and_fs_and_m2_r2_vec","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `C1_and_fs_and_m2_r2_vec` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:31:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let C1_and_fs_and_m2_r2_vec = (0..repeat)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `c1_and_fs_and_m2_r2_vec`\u001b[0m\n\n"}
{"message":"variable `C1_vec` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1550,"byte_end":1556,"line_start":47,"line_end":47,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let C1_vec = (0..repeat)","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":1550,"byte_end":1556,"line_start":47,"line_end":47,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let C1_vec = (0..repeat)","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"c1_vec","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `C1_vec` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let C1_vec = (0..repeat)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `c1_vec`\u001b[0m\n\n"}
{"message":"variable `Cb` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3759,"byte_end":3761,"line_start":107,"line_end":107,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Cb = self.C.powm(&k_slice_i, &self.N_square);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3759,"byte_end":3761,"line_start":107,"line_end":107,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Cb = self.C.powm(&k_slice_i, &self.N_square);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"cb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Cb` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:107:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Cb = self.C.powm(&k_slice_i, &self.N_square);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `cb`\u001b[0m\n\n"}
{"message":"variable `CbC1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3821,"byte_end":3825,"line_start":108,"line_end":108,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let CbC1 = &Cb * &self.C1_vec[i]; // C^b * C'","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":3821,"byte_end":3825,"line_start":108,"line_end":108,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let CbC1 = &Cb * &self.C1_vec[i]; // C^b * C'","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"cb_c1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `CbC1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:108:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let CbC1 = &Cb * &self.C1_vec[i]; // C^b * C'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `cb_c1`\u001b[0m\n\n"}
{"message":"variable `r2N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":4015,"byte_end":4018,"line_start":111,"line_end":111,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"            let r2N = &self.Response_vec[i].r2.powm(&self.N, &self.N_square);","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":4015,"byte_end":4018,"line_start":111,"line_end":111,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"            let r2N = &self.Response_vec[i].r2.powm(&self.N, &self.N_square);","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":"r2_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `r2N` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:111:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let r2N = &self.Response_vec[i].r2.powm(&self.N, &self.N_square);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r2_n`\u001b[0m\n\n"}
{"message":"variable `gm2r2N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":4093,"byte_end":4099,"line_start":112,"line_end":112,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let gm2r2N = gm2 * r2N;","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/asiaccs_zk.rs","byte_start":4093,"byte_end":4099,"line_start":112,"line_end":112,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let gm2r2N = gm2 * r2N;","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"gm2r2_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gm2r2N` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/asiaccs_zk.rs:112:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let gm2r2N = gm2 * r2N;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gm2r2_n`\u001b[0m\n\n"}
{"message":"structure field `S1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":789,"byte_end":791,"line_start":25,"line_end":25,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":789,"byte_end":791,"line_start":25,"line_end":25,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:25:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S1: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s1`\u001b[0m\n\n"}
{"message":"structure field `S2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":807,"byte_end":809,"line_start":26,"line_end":26,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":807,"byte_end":809,"line_start":26,"line_end":26,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S2: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s2`\u001b[0m\n\n"}
{"message":"structure field `S3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":825,"byte_end":827,"line_start":27,"line_end":27,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":825,"byte_end":827,"line_start":27,"line_end":27,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:27:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S3: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s3`\u001b[0m\n\n"}
{"message":"structure field `S4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":843,"byte_end":845,"line_start":28,"line_end":28,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":843,"byte_end":845,"line_start":28,"line_end":28,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:28:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S4: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s4`\u001b[0m\n\n"}
{"message":"structure field `D1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":862,"byte_end":864,"line_start":30,"line_end":30,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":862,"byte_end":864,"line_start":30,"line_end":30,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D1: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d1`\u001b[0m\n\n"}
{"message":"structure field `D2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":880,"byte_end":882,"line_start":31,"line_end":31,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":880,"byte_end":882,"line_start":31,"line_end":31,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:31:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D2: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d2`\u001b[0m\n\n"}
{"message":"structure field `D3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":898,"byte_end":900,"line_start":32,"line_end":32,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":898,"byte_end":900,"line_start":32,"line_end":32,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:32:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D3: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d3`\u001b[0m\n\n"}
{"message":"structure field `D4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":916,"byte_end":918,"line_start":33,"line_end":33,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":916,"byte_end":918,"line_start":33,"line_end":33,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D4: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d4`\u001b[0m\n\n"}
{"message":"structure field `Q1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1004,"byte_end":1006,"line_start":40,"line_end":40,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1004,"byte_end":1006,"line_start":40,"line_end":40,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:40:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q1: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q1`\u001b[0m\n\n"}
{"message":"structure field `Q2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1022,"byte_end":1024,"line_start":41,"line_end":41,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1022,"byte_end":1024,"line_start":41,"line_end":41,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:41:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q2: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q2`\u001b[0m\n\n"}
{"message":"structure field `Q3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1040,"byte_end":1042,"line_start":42,"line_end":42,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1040,"byte_end":1042,"line_start":42,"line_end":42,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:42:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q3: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q3`\u001b[0m\n\n"}
{"message":"structure field `Q4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1058,"byte_end":1060,"line_start":43,"line_end":43,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1058,"byte_end":1060,"line_start":43,"line_end":43,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:43:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q4: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q4`\u001b[0m\n\n"}
{"message":"structure field `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1353,"byte_end":1355,"line_start":58,"line_end":58,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    pub PK: GE,//ECC: G^SK","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1353,"byte_end":1355,"line_start":58,"line_end":58,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    pub PK: GE,//ECC: G^SK","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `PK` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:58:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub PK: GE,//ECC: G^SK\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"structure field `S_hat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1377,"byte_end":1382,"line_start":60,"line_end":60,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    S_hat: GE,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1377,"byte_end":1382,"line_start":60,"line_end":60,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    S_hat: GE,","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":"s_hat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S_hat` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:60:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S_hat: GE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s_hat`\u001b[0m\n\n"}
{"message":"structure field `S1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1392,"byte_end":1394,"line_start":61,"line_end":61,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1392,"byte_end":1394,"line_start":61,"line_end":61,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:61:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S1: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s1`\u001b[0m\n\n"}
{"message":"structure field `S2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1410,"byte_end":1412,"line_start":62,"line_end":62,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1410,"byte_end":1412,"line_start":62,"line_end":62,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:62:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S2: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s2`\u001b[0m\n\n"}
{"message":"structure field `S3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1428,"byte_end":1430,"line_start":63,"line_end":63,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1428,"byte_end":1430,"line_start":63,"line_end":63,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:63:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S3: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s3`\u001b[0m\n\n"}
{"message":"structure field `S4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1446,"byte_end":1448,"line_start":64,"line_end":64,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1446,"byte_end":1448,"line_start":64,"line_end":64,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:64:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S4: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s4`\u001b[0m\n\n"}
{"message":"structure field `S5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1464,"byte_end":1466,"line_start":65,"line_end":65,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S5: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1464,"byte_end":1466,"line_start":65,"line_end":65,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    S5: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"s5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `S5` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:65:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    S5: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s5`\u001b[0m\n\n"}
{"message":"structure field `D1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1483,"byte_end":1485,"line_start":67,"line_end":67,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1483,"byte_end":1485,"line_start":67,"line_end":67,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:67:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D1: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d1`\u001b[0m\n\n"}
{"message":"structure field `D2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1501,"byte_end":1503,"line_start":68,"line_end":68,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1501,"byte_end":1503,"line_start":68,"line_end":68,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:68:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D2: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d2`\u001b[0m\n\n"}
{"message":"structure field `D3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1519,"byte_end":1521,"line_start":69,"line_end":69,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1519,"byte_end":1521,"line_start":69,"line_end":69,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:69:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D3: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d3`\u001b[0m\n\n"}
{"message":"structure field `D4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1537,"byte_end":1539,"line_start":70,"line_end":70,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1537,"byte_end":1539,"line_start":70,"line_end":70,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:70:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D4: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d4`\u001b[0m\n\n"}
{"message":"structure field `D5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1555,"byte_end":1557,"line_start":71,"line_end":71,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D5: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1555,"byte_end":1557,"line_start":71,"line_end":71,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    D5: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"d5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `D5` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:71:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    D5: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d5`\u001b[0m\n\n"}
{"message":"structure field `Q1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1679,"byte_end":1681,"line_start":80,"line_end":80,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1679,"byte_end":1681,"line_start":80,"line_end":80,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q1: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:80:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q1: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q1`\u001b[0m\n\n"}
{"message":"structure field `Q2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1697,"byte_end":1699,"line_start":81,"line_end":81,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1697,"byte_end":1699,"line_start":81,"line_end":81,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q2: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:81:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q2: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q2`\u001b[0m\n\n"}
{"message":"structure field `Q3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1715,"byte_end":1717,"line_start":82,"line_end":82,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1715,"byte_end":1717,"line_start":82,"line_end":82,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q3: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q3` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:82:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q3: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q3`\u001b[0m\n\n"}
{"message":"structure field `Q4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1733,"byte_end":1735,"line_start":83,"line_end":83,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1733,"byte_end":1735,"line_start":83,"line_end":83,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q4: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:83:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q4: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q4`\u001b[0m\n\n"}
{"message":"structure field `Q5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1751,"byte_end":1753,"line_start":84,"line_end":84,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q5: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1751,"byte_end":1753,"line_start":84,"line_end":84,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    Q5: BinaryQF,","highlight_start":5,"highlight_end":7}],"label":null,"suggested_replacement":"q5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `Q5` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:84:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Q5: BinaryQF,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q5`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1944,"byte_end":1946,"line_start":95,"line_end":95,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            Kx: BigInt, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":1944,"byte_end":1946,"line_start":95,"line_end":95,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            Kx: BigInt, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:95:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            Kx: BigInt, \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2127,"byte_end":2128,"line_start":102,"line_end":102,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            B: BigInt, ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2127,"byte_end":2128,"line_start":102,"line_end":102,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            B: BigInt, ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:102:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            B: BigInt, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2151,"byte_end":2158,"line_start":103,"line_end":103,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            minus_B: BigInt, ","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2151,"byte_end":2158,"line_start":103,"line_end":103,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            minus_B: BigInt, ","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:103:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            minus_B: BigInt, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `S1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2801,"byte_end":2803,"line_start":119,"line_end":119,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S1 = hsmcl.pk.gq.exp(&s_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2801,"byte_end":2803,"line_start":119,"line_end":119,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S1 = hsmcl.pk.gq.exp(&s_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:119:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S1 = hsmcl.pk.gq.exp(&s_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s1`\u001b[0m\n\n"}
{"message":"variable `S2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2841,"byte_end":2843,"line_start":120,"line_end":120,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S2 = fsh.compose(&pks1).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2841,"byte_end":2843,"line_start":120,"line_end":120,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S2 = fsh.compose(&pks1).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:120:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S2 = fsh.compose(&pks1).reduce();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s2`\u001b[0m\n\n"}
{"message":"variable `S3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2887,"byte_end":2889,"line_start":121,"line_end":121,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S3 = hsmcl.pk.gq.exp(&s_2);   ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2887,"byte_end":2889,"line_start":121,"line_end":121,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S3 = hsmcl.pk.gq.exp(&s_2);   ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S3` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:121:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S3 = hsmcl.pk.gq.exp(&s_2);   \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s3`\u001b[0m\n\n"}
{"message":"variable `S4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2930,"byte_end":2932,"line_start":122,"line_end":122,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S4 = fsx.compose(&pks2).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":2930,"byte_end":2932,"line_start":122,"line_end":122,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S4 = fsx.compose(&pks2).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:122:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S4 = fsx.compose(&pks2).reduce();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s4`\u001b[0m\n\n"}
{"message":"variable `D1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3774,"byte_end":3776,"line_start":147,"line_end":147,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D1 = hsmcl.pk.gq.exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3774,"byte_end":3776,"line_start":147,"line_end":147,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D1 = hsmcl.pk.gq.exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:147:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D1 = hsmcl.pk.gq.exp(&d_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d1`\u001b[0m\n\n"}
{"message":"variable `D2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3814,"byte_end":3816,"line_start":148,"line_end":148,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D2 = hsmcl.pk.h.clone().exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3814,"byte_end":3816,"line_start":148,"line_end":148,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D2 = hsmcl.pk.h.clone().exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:148:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D2 = hsmcl.pk.h.clone().exp(&d_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d2`\u001b[0m\n\n"}
{"message":"variable `D3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3861,"byte_end":3863,"line_start":149,"line_end":149,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D3 = hsmcl.pk.gq.exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3861,"byte_end":3863,"line_start":149,"line_end":149,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D3 = hsmcl.pk.gq.exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D3` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:149:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D3 = hsmcl.pk.gq.exp(&d_2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d3`\u001b[0m\n\n"}
{"message":"variable `D4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3901,"byte_end":3903,"line_start":150,"line_end":150,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D4 = hsmcl.pk.h.clone().exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":3901,"byte_end":3903,"line_start":150,"line_end":150,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D4 = hsmcl.pk.h.clone().exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:150:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D4 = hsmcl.pk.h.clone().exp(&d_2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d4`\u001b[0m\n\n"}
{"message":"variable `Q1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4685,"byte_end":4687,"line_start":175,"line_end":175,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q1 = hsmcl.pk.gq.exp(&q_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4685,"byte_end":4687,"line_start":175,"line_end":175,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q1 = hsmcl.pk.gq.exp(&q_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:175:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q1 = hsmcl.pk.gq.exp(&q_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q1`\u001b[0m\n\n"}
{"message":"variable `Q2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4725,"byte_end":4727,"line_start":176,"line_end":176,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q2 = hsmcl.pk.h.exp(&q_1); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4725,"byte_end":4727,"line_start":176,"line_end":176,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q2 = hsmcl.pk.h.exp(&q_1); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:176:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q2 = hsmcl.pk.h.exp(&q_1); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q2`\u001b[0m\n\n"}
{"message":"variable `Q3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4765,"byte_end":4767,"line_start":177,"line_end":177,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q3 = hsmcl.pk.gq.exp(&q_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4765,"byte_end":4767,"line_start":177,"line_end":177,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q3 = hsmcl.pk.gq.exp(&q_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q3` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:177:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q3 = hsmcl.pk.gq.exp(&q_2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q3`\u001b[0m\n\n"}
{"message":"variable `Q4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4805,"byte_end":4807,"line_start":178,"line_end":178,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q4 = hsmcl.pk.h.exp(&q_2); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":4805,"byte_end":4807,"line_start":178,"line_end":178,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q4 = hsmcl.pk.h.exp(&q_2); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:178:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q4 = hsmcl.pk.h.exp(&q_2); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q4`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10183,"byte_end":10185,"line_start":360,"line_end":360,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            Kx: BigInt, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10183,"byte_end":10185,"line_start":360,"line_end":360,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            Kx: BigInt, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:360:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            Kx: BigInt, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10366,"byte_end":10368,"line_start":367,"line_end":367,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            PK: GE, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10366,"byte_end":10368,"line_start":367,"line_end":367,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            PK: GE, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:367:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            PK: GE, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10387,"byte_end":10389,"line_start":368,"line_end":368,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            SK: BigInt, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10387,"byte_end":10389,"line_start":368,"line_end":368,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            SK: BigInt, ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:368:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            SK: BigInt, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10412,"byte_end":10413,"line_start":369,"line_end":369,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            B: BigInt, ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10412,"byte_end":10413,"line_start":369,"line_end":369,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            B: BigInt, ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:369:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            B: BigInt, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10436,"byte_end":10443,"line_start":370,"line_end":370,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            minus_B: BigInt, ","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":10436,"byte_end":10443,"line_start":370,"line_end":370,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            minus_B: BigInt, ","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:370:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            minus_B: BigInt, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `S_hat` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11260,"byte_end":11265,"line_start":389,"line_end":389,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let S_hat = &g * &srho_fe; ","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11260,"byte_end":11265,"line_start":389,"line_end":389,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let S_hat = &g * &srho_fe; ","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"s_hat","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S_hat` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:389:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S_hat = &g * &srho_fe; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s_hat`\u001b[0m\n\n"}
{"message":"variable `S1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11296,"byte_end":11298,"line_start":390,"line_end":390,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S1 = hsmcl.pk.gq.exp(&s_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11296,"byte_end":11298,"line_start":390,"line_end":390,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S1 = hsmcl.pk.gq.exp(&s_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:390:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S1 = hsmcl.pk.gq.exp(&s_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s1`\u001b[0m\n\n"}
{"message":"variable `S2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11336,"byte_end":11338,"line_start":391,"line_end":391,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S2 = fsh.compose(&pks1).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11336,"byte_end":11338,"line_start":391,"line_end":391,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S2 = fsh.compose(&pks1).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:391:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S2 = fsh.compose(&pks1).reduce();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s2`\u001b[0m\n\n"}
{"message":"variable `S3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11382,"byte_end":11384,"line_start":392,"line_end":392,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S3 = hsmcl.pk.gq.exp(&s_2);   ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11382,"byte_end":11384,"line_start":392,"line_end":392,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S3 = hsmcl.pk.gq.exp(&s_2);   ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S3` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:392:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S3 = hsmcl.pk.gq.exp(&s_2);   \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s3`\u001b[0m\n\n"}
{"message":"variable `S4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11425,"byte_end":11427,"line_start":393,"line_end":393,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S4 = fsx.compose(&pks2).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11425,"byte_end":11427,"line_start":393,"line_end":393,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S4 = fsx.compose(&pks2).reduce();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:393:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S4 = fsx.compose(&pks2).reduce();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s4`\u001b[0m\n\n"}
{"message":"variable `S5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11471,"byte_end":11473,"line_start":394,"line_end":394,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S5 = hsmcl.pk.gq.exp(&s_k);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":11471,"byte_end":11473,"line_start":394,"line_end":394,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let S5 = hsmcl.pk.gq.exp(&s_k);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"s5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `S5` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:394:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let S5 = hsmcl.pk.gq.exp(&s_k);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `s5`\u001b[0m\n\n"}
{"message":"variable `D1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12704,"byte_end":12706,"line_start":427,"line_end":427,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D1 = hsmcl.pk.gq.exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12704,"byte_end":12706,"line_start":427,"line_end":427,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D1 = hsmcl.pk.gq.exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:427:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D1 = hsmcl.pk.gq.exp(&d_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d1`\u001b[0m\n\n"}
{"message":"variable `D2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12744,"byte_end":12746,"line_start":428,"line_end":428,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D2 = hsmcl.pk.h.clone().exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12744,"byte_end":12746,"line_start":428,"line_end":428,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D2 = hsmcl.pk.h.clone().exp(&d_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:428:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D2 = hsmcl.pk.h.clone().exp(&d_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d2`\u001b[0m\n\n"}
{"message":"variable `D3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12791,"byte_end":12793,"line_start":429,"line_end":429,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D3 = hsmcl.pk.gq.exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12791,"byte_end":12793,"line_start":429,"line_end":429,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D3 = hsmcl.pk.gq.exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D3` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:429:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D3 = hsmcl.pk.gq.exp(&d_2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d3`\u001b[0m\n\n"}
{"message":"variable `D4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12831,"byte_end":12833,"line_start":430,"line_end":430,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D4 = hsmcl.pk.h.clone().exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12831,"byte_end":12833,"line_start":430,"line_end":430,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D4 = hsmcl.pk.h.clone().exp(&d_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:430:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D4 = hsmcl.pk.h.clone().exp(&d_2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d4`\u001b[0m\n\n"}
{"message":"variable `D5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12878,"byte_end":12880,"line_start":431,"line_end":431,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D5 = hsmcl.pk.gq.exp(&d_k);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":12878,"byte_end":12880,"line_start":431,"line_end":431,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let D5 = hsmcl.pk.gq.exp(&d_k);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"d5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D5` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:431:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D5 = hsmcl.pk.gq.exp(&d_k);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d5`\u001b[0m\n\n"}
{"message":"variable `Q1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14225,"byte_end":14227,"line_start":469,"line_end":469,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q1 = hsmcl.pk.gq.exp(&q_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14225,"byte_end":14227,"line_start":469,"line_end":469,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q1 = hsmcl.pk.gq.exp(&q_1);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:469:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q1 = hsmcl.pk.gq.exp(&q_1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q1`\u001b[0m\n\n"}
{"message":"variable `Q2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14265,"byte_end":14267,"line_start":470,"line_end":470,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q2 = hsmcl.pk.h.exp(&q_1); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14265,"byte_end":14267,"line_start":470,"line_end":470,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q2 = hsmcl.pk.h.exp(&q_1); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:470:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q2 = hsmcl.pk.h.exp(&q_1); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q2`\u001b[0m\n\n"}
{"message":"variable `Q3` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14305,"byte_end":14307,"line_start":471,"line_end":471,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q3 = hsmcl.pk.gq.exp(&q_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14305,"byte_end":14307,"line_start":471,"line_end":471,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q3 = hsmcl.pk.gq.exp(&q_2);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q3","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q3` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:471:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q3 = hsmcl.pk.gq.exp(&q_2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q3`\u001b[0m\n\n"}
{"message":"variable `Q4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14345,"byte_end":14347,"line_start":472,"line_end":472,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q4 = hsmcl.pk.h.exp(&q_2); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14345,"byte_end":14347,"line_start":472,"line_end":472,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q4 = hsmcl.pk.h.exp(&q_2); ","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:472:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m472\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q4 = hsmcl.pk.h.exp(&q_2); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q4`\u001b[0m\n\n"}
{"message":"variable `Q5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14385,"byte_end":14387,"line_start":473,"line_end":473,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q5 = hsmcl.pk.gq.exp(&q_k);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/ggm_zk.rs","byte_start":14385,"byte_end":14387,"line_start":473,"line_end":473,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let Q5 = hsmcl.pk.gq.exp(&q_k);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"q5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q5` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/ggm_zk.rs:473:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m473\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Q5 = hsmcl.pk.gq.exp(&q_k);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q5`\u001b[0m\n\n"}
{"message":"structure field `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":254,"byte_end":255,"line_start":10,"line_end":10,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub N: BigInt,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":254,"byte_end":255,"line_start":10,"line_end":10,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    pub N: BigInt,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub N: BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"structure field `N_square` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":273,"byte_end":281,"line_start":11,"line_end":11,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    pub N_square: BigInt,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":273,"byte_end":281,"line_start":11,"line_end":11,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    pub N_square: BigInt,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"n_square","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `N_square` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:11:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub N_square: BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_square`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":999,"byte_end":1000,"line_start":33,"line_end":33,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let N = &p *&q *&t;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":999,"byte_end":1000,"line_start":33,"line_end":33,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let N = &p *&q *&t;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let N = &p *&q *&t;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `N_square` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1023,"byte_end":1031,"line_start":34,"line_end":34,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let N_square = &N * &N;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1023,"byte_end":1031,"line_start":34,"line_end":34,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let N_square = &N * &N;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"n_square","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N_square` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:34:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let N_square = &N * &N;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_square`\u001b[0m\n\n"}
{"message":"variable `N_plus_1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1073,"byte_end":1081,"line_start":36,"line_end":36,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let N_plus_1 = &N + &BigInt::from(1);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1073,"byte_end":1081,"line_start":36,"line_end":36,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let N_plus_1 = &N + &BigInt::from(1);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"n_plus_1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N_plus_1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:36:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let N_plus_1 = &N + &BigInt::from(1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_plus_1`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1359,"byte_end":1360,"line_start":53,"line_end":53,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        N: &BigInt,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1359,"byte_end":1360,"line_start":53,"line_end":53,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        N: &BigInt,","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:53:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        N: &BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `N_square` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1379,"byte_end":1387,"line_start":54,"line_end":54,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        N_square: &BigInt,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1379,"byte_end":1387,"line_start":54,"line_end":54,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        N_square: &BigInt,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"n_square","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N_square` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:54:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        N_square: &BigInt,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n_square`\u001b[0m\n\n"}
{"message":"variable `rN` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1514,"byte_end":1516,"line_start":59,"line_end":59,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let rN = r.powm(&N, & N_square);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1514,"byte_end":1516,"line_start":59,"line_end":59,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"        let rN = r.powm(&N, & N_square);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"r_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `rN` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:59:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let rN = r.powm(&N, & N_square);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r_n`\u001b[0m\n\n"}
{"message":"variable `gmrN` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1555,"byte_end":1559,"line_start":60,"line_end":60,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let gmrN = &gm * &rN;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1555,"byte_end":1559,"line_start":60,"line_end":60,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let gmrN = &gm * &rN;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"gmr_n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `gmrN` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:60:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let gmrN = &gm * &rN;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `gmr_n`\u001b[0m\n\n"}
{"message":"variable `D` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1971,"byte_end":1972,"line_start":73,"line_end":73,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        let D = ciphertext.powm(&exp, &key.N_square);","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":1971,"byte_end":1972,"line_start":73,"line_end":73,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"        let D = ciphertext.powm(&exp, &key.N_square);","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"d","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:73:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D = ciphertext.powm(&exp, &key.N_square);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d`\u001b[0m\n\n"}
{"message":"variable `D_minus_1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":2025,"byte_end":2034,"line_start":74,"line_end":74,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let D_minus_1 = &D - &BigInt::one();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":2025,"byte_end":2034,"line_start":74,"line_end":74,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let D_minus_1 = &D - &BigInt::one();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"d_minus_1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `D_minus_1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:74:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let D_minus_1 = &D - &BigInt::one();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `d_minus_1`\u001b[0m\n\n"}
{"message":"variable `Npt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":2070,"byte_end":2073,"line_start":75,"line_end":75,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let Npt = &key.N * &key.p * &key.t;","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/protocols/mpaillier.rs","byte_start":2070,"byte_end":2073,"line_start":75,"line_end":75,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let Npt = &key.N * &key.p * &key.t;","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"npt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Npt` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/protocols/mpaillier.rs:75:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let Npt = &key.N * &key.p * &key.t;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `npt`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_prove_2048` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":642,"byte_end":665,"line_start":22,"line_end":22,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":642,"byte_end":665,"line_start":22,"line_end":22,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":"asia_ccs_nizk_prove_2048","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_prove_2048` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_prove_2048`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_prove_3072` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":1595,"byte_end":1618,"line_start":48,"line_end":48,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":1595,"byte_end":1618,"line_start":48,"line_end":48,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":"asia_ccs_nizk_prove_3072","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_prove_3072` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:48:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_prove_3072`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_prove_4096` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":2548,"byte_end":2571,"line_start":74,"line_end":74,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":2548,"byte_end":2571,"line_start":74,"line_end":74,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":"asia_ccs_nizk_prove_4096","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_prove_4096` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:74:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_prove_4096`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_verify_2048` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":3502,"byte_end":3526,"line_start":101,"line_end":101,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":3502,"byte_end":3526,"line_start":101,"line_end":101,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":"asia_ccs_nizk_verify_2048","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_verify_2048` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:101:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_verify_2048`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_verify_3072` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":4430,"byte_end":4454,"line_start":126,"line_end":126,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":4430,"byte_end":4454,"line_start":126,"line_end":126,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":"asia_ccs_nizk_verify_3072","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_verify_3072` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:126:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_verify_3072`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_verify_4096` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":5358,"byte_end":5382,"line_start":151,"line_end":151,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":5358,"byte_end":5382,"line_start":151,"line_end":151,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":"asia_ccs_nizk_verify_4096","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_verify_4096` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:151:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_verify_4096`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":6987,"byte_end":6989,"line_start":190,"line_end":190,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":6987,"byte_end":6989,"line_start":190,"line_end":190,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:190:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7233,"byte_end":7238,"line_start":193,"line_end":193,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7233,"byte_end":7238,"line_start":193,"line_end":193,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:193:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7393,"byte_end":7399,"line_start":196,"line_end":196,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7393,"byte_end":7399,"line_start":196,"line_end":196,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:196:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7557,"byte_end":7562,"line_start":199,"line_end":199,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7557,"byte_end":7562,"line_start":199,"line_end":199,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:199:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7603,"byte_end":7605,"line_start":200,"line_end":200,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7603,"byte_end":7605,"line_start":200,"line_end":200,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:200:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7698,"byte_end":7700,"line_start":202,"line_end":202,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7698,"byte_end":7700,"line_start":202,"line_end":202,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:202:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7873,"byte_end":7874,"line_start":205,"line_end":205,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7873,"byte_end":7874,"line_start":205,"line_end":205,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:205:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7972,"byte_end":7979,"line_start":207,"line_end":207,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":7972,"byte_end":7979,"line_start":207,"line_end":207,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:207:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9318,"byte_end":9320,"line_start":243,"line_end":243,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9318,"byte_end":9320,"line_start":243,"line_end":243,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:243:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9564,"byte_end":9569,"line_start":246,"line_end":246,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9564,"byte_end":9569,"line_start":246,"line_end":246,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:246:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9724,"byte_end":9730,"line_start":249,"line_end":249,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9724,"byte_end":9730,"line_start":249,"line_end":249,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:249:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9888,"byte_end":9893,"line_start":252,"line_end":252,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9888,"byte_end":9893,"line_start":252,"line_end":252,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:252:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9934,"byte_end":9936,"line_start":253,"line_end":253,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":9934,"byte_end":9936,"line_start":253,"line_end":253,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:253:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10029,"byte_end":10031,"line_start":255,"line_end":255,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10029,"byte_end":10031,"line_start":255,"line_end":255,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:255:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10204,"byte_end":10205,"line_start":258,"line_end":258,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10204,"byte_end":10205,"line_start":258,"line_end":258,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:258:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10303,"byte_end":10310,"line_start":260,"line_end":260,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":10303,"byte_end":10310,"line_start":260,"line_end":260,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:260:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":11652,"byte_end":11654,"line_start":297,"line_end":297,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":11652,"byte_end":11654,"line_start":297,"line_end":297,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:297:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":11898,"byte_end":11903,"line_start":300,"line_end":300,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":11898,"byte_end":11903,"line_start":300,"line_end":300,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:300:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12058,"byte_end":12064,"line_start":303,"line_end":303,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12058,"byte_end":12064,"line_start":303,"line_end":303,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:303:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12222,"byte_end":12227,"line_start":306,"line_end":306,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12222,"byte_end":12227,"line_start":306,"line_end":306,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:306:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12268,"byte_end":12270,"line_start":307,"line_end":307,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12268,"byte_end":12270,"line_start":307,"line_end":307,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:307:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12363,"byte_end":12365,"line_start":309,"line_end":309,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12363,"byte_end":12365,"line_start":309,"line_end":309,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:309:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12538,"byte_end":12539,"line_start":312,"line_end":312,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12538,"byte_end":12539,"line_start":312,"line_end":312,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:312:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12637,"byte_end":12644,"line_start":314,"line_end":314,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":12637,"byte_end":12644,"line_start":314,"line_end":314,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:314:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":13931,"byte_end":13933,"line_start":348,"line_end":348,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":13931,"byte_end":13933,"line_start":348,"line_end":348,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:348:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14177,"byte_end":14182,"line_start":351,"line_end":351,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14177,"byte_end":14182,"line_start":351,"line_end":351,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:351:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14337,"byte_end":14343,"line_start":354,"line_end":354,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14337,"byte_end":14343,"line_start":354,"line_end":354,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:354:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14501,"byte_end":14506,"line_start":357,"line_end":357,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14501,"byte_end":14506,"line_start":357,"line_end":357,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:357:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14547,"byte_end":14549,"line_start":358,"line_end":358,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14547,"byte_end":14549,"line_start":358,"line_end":358,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:358:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14642,"byte_end":14644,"line_start":360,"line_end":360,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14642,"byte_end":14644,"line_start":360,"line_end":360,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:360:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14817,"byte_end":14818,"line_start":363,"line_end":363,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14817,"byte_end":14818,"line_start":363,"line_end":363,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:363:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14916,"byte_end":14923,"line_start":365,"line_end":365,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":14916,"byte_end":14923,"line_start":365,"line_end":365,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:365:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16215,"byte_end":16217,"line_start":399,"line_end":399,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16215,"byte_end":16217,"line_start":399,"line_end":399,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:399:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16461,"byte_end":16466,"line_start":402,"line_end":402,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16461,"byte_end":16466,"line_start":402,"line_end":402,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:402:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16621,"byte_end":16627,"line_start":405,"line_end":405,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16621,"byte_end":16627,"line_start":405,"line_end":405,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:405:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16974,"byte_end":16975,"line_start":411,"line_end":411,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":16974,"byte_end":16975,"line_start":411,"line_end":411,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:411:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":17073,"byte_end":17080,"line_start":413,"line_end":413,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":17073,"byte_end":17080,"line_start":413,"line_end":413,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:413:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18364,"byte_end":18366,"line_start":447,"line_end":447,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18364,"byte_end":18366,"line_start":447,"line_end":447,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:447:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18610,"byte_end":18615,"line_start":450,"line_end":450,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18610,"byte_end":18615,"line_start":450,"line_end":450,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:450:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18770,"byte_end":18776,"line_start":453,"line_end":453,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":18770,"byte_end":18776,"line_start":453,"line_end":453,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:453:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":19123,"byte_end":19124,"line_start":459,"line_end":459,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":19123,"byte_end":19124,"line_start":459,"line_end":459,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:459:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m459\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":19222,"byte_end":19229,"line_start":461,"line_end":461,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":19222,"byte_end":19229,"line_start":461,"line_end":461,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:461:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":20516,"byte_end":20518,"line_start":496,"line_end":496,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":20516,"byte_end":20518,"line_start":496,"line_end":496,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:496:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":20762,"byte_end":20767,"line_start":499,"line_end":499,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":20762,"byte_end":20767,"line_start":499,"line_end":499,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:499:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":20922,"byte_end":20928,"line_start":502,"line_end":502,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":20922,"byte_end":20928,"line_start":502,"line_end":502,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:502:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":21275,"byte_end":21276,"line_start":508,"line_end":508,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":21275,"byte_end":21276,"line_start":508,"line_end":508,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:508:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m508\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":21374,"byte_end":21381,"line_start":510,"line_end":510,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":21374,"byte_end":21381,"line_start":510,"line_end":510,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:510:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":22621,"byte_end":22623,"line_start":542,"line_end":542,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":22621,"byte_end":22623,"line_start":542,"line_end":542,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:542:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":22867,"byte_end":22872,"line_start":545,"line_end":545,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":22867,"byte_end":22872,"line_start":545,"line_end":545,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:545:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m545\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":23027,"byte_end":23033,"line_start":548,"line_end":548,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":23027,"byte_end":23033,"line_start":548,"line_end":548,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:548:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":23380,"byte_end":23381,"line_start":554,"line_end":554,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":23380,"byte_end":23381,"line_start":554,"line_end":554,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:554:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":23479,"byte_end":23486,"line_start":556,"line_end":556,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/benches/zk_bench.rs","byte_start":23479,"byte_end":23486,"line_start":556,"line_end":556,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/benches/zk_bench.rs:556:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"204 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 204 warnings emitted\u001b[0m\n\n"}
