{"message":"constant is never used: `SECURITY_PARAMETER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":548,"byte_end":585,"line_start":14,"line_end":14,"column_start":1,"column_end":38,"is_primary":true,"text":[{"text":"const SECURITY_PARAMETER: usize = 80;","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `SECURITY_PARAMETER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst SECURITY_PARAMETER: usize = 80;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_prove_3072`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":1724,"byte_end":1747,"line_start":48,"line_end":48,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_prove_3072`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:48:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_prove_4096`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":2677,"byte_end":2700,"line_start":74,"line_end":74,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_prove_4096`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:74:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_verify_2048`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":3631,"byte_end":3655,"line_start":101,"line_end":101,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_verify_2048`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:101:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_verify_3072`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":4559,"byte_end":4583,"line_start":126,"line_end":126,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_verify_3072`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:126:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `AsiaCCS_nizk_verify_4096`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":5487,"byte_end":5511,"line_start":151,"line_end":151,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `AsiaCCS_nizk_verify_4096`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:151:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_112`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":6416,"byte_end":6436,"line_start":177,"line_end":177,"column_start":12,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_112(c: &mut Criterion) {","highlight_start":12,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_112`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:177:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_112(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_128`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":8748,"byte_end":8768,"line_start":231,"line_end":231,"column_start":12,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_128(c: &mut Criterion) {","highlight_start":12,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_128`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:231:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_128(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_112`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":11079,"byte_end":11100,"line_start":284,"line_end":284,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_112(c: &mut Criterion) {","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_112`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:284:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_112(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_128`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":13359,"byte_end":13380,"line_start":336,"line_end":336,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_128(c: &mut Criterion) {","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_128`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:336:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_128(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_112_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":15638,"byte_end":15661,"line_start":386,"line_end":386,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_112_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_112_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:386:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m386\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_112_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_prove_128_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":17788,"byte_end":17811,"line_start":435,"line_end":435,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_prove_128_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_prove_128_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:435:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_prove_128_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_112_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":19937,"byte_end":19961,"line_start":483,"line_end":483,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_112_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_112_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:483:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m483\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_112_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `hsmcl_nizk_verify_128_v0`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":22043,"byte_end":22067,"line_start":530,"line_end":530,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn hsmcl_nizk_verify_128_v0(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `hsmcl_nizk_verify_128_v0`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:530:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn hsmcl_nizk_verify_128_v0(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_prove_2048` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":771,"byte_end":794,"line_start":22,"line_end":22,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":771,"byte_end":794,"line_start":22,"line_end":22,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":"asia_ccs_nizk_prove_2048","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_prove_2048` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:22:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_prove_2048`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_prove_3072` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":1724,"byte_end":1747,"line_start":48,"line_end":48,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":1724,"byte_end":1747,"line_start":48,"line_end":48,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":"asia_ccs_nizk_prove_3072","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_prove_3072` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:48:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_prove_3072`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_prove_4096` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":2677,"byte_end":2700,"line_start":74,"line_end":74,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":2677,"byte_end":2700,"line_start":74,"line_end":74,"column_start":12,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":35}],"label":null,"suggested_replacement":"asia_ccs_nizk_prove_4096","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_prove_4096` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:74:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_prove_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_prove_4096`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_verify_2048` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":3631,"byte_end":3655,"line_start":101,"line_end":101,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":3631,"byte_end":3655,"line_start":101,"line_end":101,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":"asia_ccs_nizk_verify_2048","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_verify_2048` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:101:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_2048(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_verify_2048`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_verify_3072` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":4559,"byte_end":4583,"line_start":126,"line_end":126,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":4559,"byte_end":4583,"line_start":126,"line_end":126,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":"asia_ccs_nizk_verify_3072","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_verify_3072` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:126:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_3072(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_verify_3072`\u001b[0m\n\n"}
{"message":"function `AsiaCCS_nizk_verify_4096` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":5487,"byte_end":5511,"line_start":151,"line_end":151,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":5487,"byte_end":5511,"line_start":151,"line_end":151,"column_start":12,"column_end":36,"is_primary":true,"text":[{"text":"    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {","highlight_start":12,"highlight_end":36}],"label":null,"suggested_replacement":"asia_ccs_nizk_verify_4096","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `AsiaCCS_nizk_verify_4096` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:151:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn AsiaCCS_nizk_verify_4096(c: &mut Criterion) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `asia_ccs_nizk_verify_4096`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7116,"byte_end":7118,"line_start":190,"line_end":190,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7116,"byte_end":7118,"line_start":190,"line_end":190,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:190:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7362,"byte_end":7367,"line_start":193,"line_end":193,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7362,"byte_end":7367,"line_start":193,"line_end":193,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:193:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7522,"byte_end":7528,"line_start":196,"line_end":196,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7522,"byte_end":7528,"line_start":196,"line_end":196,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:196:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7686,"byte_end":7691,"line_start":199,"line_end":199,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7686,"byte_end":7691,"line_start":199,"line_end":199,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:199:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7732,"byte_end":7734,"line_start":200,"line_end":200,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7732,"byte_end":7734,"line_start":200,"line_end":200,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:200:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7827,"byte_end":7829,"line_start":202,"line_end":202,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":7827,"byte_end":7829,"line_start":202,"line_end":202,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:202:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":8002,"byte_end":8003,"line_start":205,"line_end":205,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":8002,"byte_end":8003,"line_start":205,"line_end":205,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:205:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":8101,"byte_end":8108,"line_start":207,"line_end":207,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":8101,"byte_end":8108,"line_start":207,"line_end":207,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:207:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":9447,"byte_end":9449,"line_start":243,"line_end":243,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":9447,"byte_end":9449,"line_start":243,"line_end":243,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:243:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":9693,"byte_end":9698,"line_start":246,"line_end":246,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":9693,"byte_end":9698,"line_start":246,"line_end":246,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:246:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":9853,"byte_end":9859,"line_start":249,"line_end":249,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":9853,"byte_end":9859,"line_start":249,"line_end":249,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:249:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10017,"byte_end":10022,"line_start":252,"line_end":252,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10017,"byte_end":10022,"line_start":252,"line_end":252,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:252:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10063,"byte_end":10065,"line_start":253,"line_end":253,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10063,"byte_end":10065,"line_start":253,"line_end":253,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:253:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10158,"byte_end":10160,"line_start":255,"line_end":255,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10158,"byte_end":10160,"line_start":255,"line_end":255,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:255:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10333,"byte_end":10334,"line_start":258,"line_end":258,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10333,"byte_end":10334,"line_start":258,"line_end":258,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:258:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10432,"byte_end":10439,"line_start":260,"line_end":260,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":10432,"byte_end":10439,"line_start":260,"line_end":260,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:260:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":11781,"byte_end":11783,"line_start":297,"line_end":297,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":11781,"byte_end":11783,"line_start":297,"line_end":297,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:297:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12027,"byte_end":12032,"line_start":300,"line_end":300,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12027,"byte_end":12032,"line_start":300,"line_end":300,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:300:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12187,"byte_end":12193,"line_start":303,"line_end":303,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12187,"byte_end":12193,"line_start":303,"line_end":303,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:303:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12351,"byte_end":12356,"line_start":306,"line_end":306,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12351,"byte_end":12356,"line_start":306,"line_end":306,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:306:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12397,"byte_end":12399,"line_start":307,"line_end":307,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12397,"byte_end":12399,"line_start":307,"line_end":307,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:307:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12492,"byte_end":12494,"line_start":309,"line_end":309,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12492,"byte_end":12494,"line_start":309,"line_end":309,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:309:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12667,"byte_end":12668,"line_start":312,"line_end":312,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12667,"byte_end":12668,"line_start":312,"line_end":312,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:312:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m312\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12766,"byte_end":12773,"line_start":314,"line_end":314,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":12766,"byte_end":12773,"line_start":314,"line_end":314,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:314:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14060,"byte_end":14062,"line_start":348,"line_end":348,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14060,"byte_end":14062,"line_start":348,"line_end":348,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:348:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14306,"byte_end":14311,"line_start":351,"line_end":351,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14306,"byte_end":14311,"line_start":351,"line_end":351,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:351:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m351\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14466,"byte_end":14472,"line_start":354,"line_end":354,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14466,"byte_end":14472,"line_start":354,"line_end":354,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:354:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `SK_fe` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14630,"byte_end":14635,"line_start":357,"line_end":357,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14630,"byte_end":14635,"line_start":357,"line_end":357,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let SK_fe: FE = FE::new_random();","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"sk_fe","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK_fe` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:357:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK_fe: FE = FE::new_random();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk_fe`\u001b[0m\n\n"}
{"message":"variable `SK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14676,"byte_end":14678,"line_start":358,"line_end":358,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14676,"byte_end":14678,"line_start":358,"line_end":358,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let SK = SK_fe.to_big_int();","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"sk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `SK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:358:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let SK = SK_fe.to_big_int();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `sk`\u001b[0m\n\n"}
{"message":"variable `PK` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14771,"byte_end":14773,"line_start":360,"line_end":360,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14771,"byte_end":14773,"line_start":360,"line_end":360,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let PK = g.clone() * SK_fe;","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"pk","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `PK` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:360:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let PK = g.clone() * SK_fe;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `pk`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14946,"byte_end":14947,"line_start":363,"line_end":363,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":14946,"byte_end":14947,"line_start":363,"line_end":363,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:363:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":15045,"byte_end":15052,"line_start":365,"line_end":365,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":15045,"byte_end":15052,"line_start":365,"line_end":365,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:365:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":16344,"byte_end":16346,"line_start":399,"line_end":399,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":16344,"byte_end":16346,"line_start":399,"line_end":399,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:399:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":16590,"byte_end":16595,"line_start":402,"line_end":402,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":16590,"byte_end":16595,"line_start":402,"line_end":402,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:402:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":16750,"byte_end":16756,"line_start":405,"line_end":405,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":16750,"byte_end":16756,"line_start":405,"line_end":405,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:405:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":17103,"byte_end":17104,"line_start":411,"line_end":411,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":17103,"byte_end":17104,"line_start":411,"line_end":411,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:411:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":17202,"byte_end":17209,"line_start":413,"line_end":413,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":17202,"byte_end":17209,"line_start":413,"line_end":413,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:413:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":18493,"byte_end":18495,"line_start":447,"line_end":447,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":18493,"byte_end":18495,"line_start":447,"line_end":447,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:447:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":18739,"byte_end":18744,"line_start":450,"line_end":450,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":18739,"byte_end":18744,"line_start":450,"line_end":450,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:450:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":18899,"byte_end":18905,"line_start":453,"line_end":453,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":18899,"byte_end":18905,"line_start":453,"line_end":453,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:453:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":19252,"byte_end":19253,"line_start":459,"line_end":459,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":19252,"byte_end":19253,"line_start":459,"line_end":459,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:459:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m459\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":19351,"byte_end":19358,"line_start":461,"line_end":461,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":19351,"byte_end":19358,"line_start":461,"line_end":461,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:461:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":20645,"byte_end":20647,"line_start":496,"line_end":496,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":20645,"byte_end":20647,"line_start":496,"line_end":496,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:496:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":20891,"byte_end":20896,"line_start":499,"line_end":499,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":20891,"byte_end":20896,"line_start":499,"line_end":499,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:499:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":21051,"byte_end":21057,"line_start":502,"line_end":502,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":21051,"byte_end":21057,"line_start":502,"line_end":502,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:502:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":21404,"byte_end":21405,"line_start":508,"line_end":508,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":21404,"byte_end":21405,"line_start":508,"line_end":508,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:508:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m508\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":21503,"byte_end":21510,"line_start":510,"line_end":510,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":21503,"byte_end":21510,"line_start":510,"line_end":510,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:510:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"variable `Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":22750,"byte_end":22752,"line_start":542,"line_end":542,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":22750,"byte_end":22752,"line_start":542,"line_end":542,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:542:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Kx = HSha256::create_hash(&[&BigInt::from(222)]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `kx`\u001b[0m\n\n"}
{"message":"variable `Enc_h` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":22996,"byte_end":23001,"line_start":545,"line_end":545,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":22996,"byte_end":23001,"line_start":545,"line_end":545,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":"enc_h","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_h` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:545:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m545\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_h = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &h, &r1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_h`\u001b[0m\n\n"}
{"message":"variable `Enc_Kx` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":23156,"byte_end":23162,"line_start":548,"line_end":548,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":23156,"byte_end":23162,"line_start":548,"line_end":548,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"enc_kx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Enc_Kx` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:548:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let Enc_Kx = HSMCL::encrypt_predefined_randomness(&hsmcl.pk, &Kx, &r2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `enc_kx`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":23509,"byte_end":23510,"line_start":554,"line_end":554,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":23509,"byte_end":23510,"line_start":554,"line_end":554,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"            let B = &two_pow_exp * &hsmcl.pk.stilde;","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:554:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let B = &two_pow_exp * &hsmcl.pk.stilde;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `minus_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"benches/zk_bench.rs","byte_start":23608,"byte_end":23615,"line_start":556,"line_end":556,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"benches/zk_bench.rs","byte_start":23608,"byte_end":23615,"line_start":556,"line_end":556,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"            let minus_B = &minus_one * &B; // = -B","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"minus_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `minus_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbenches/zk_bench.rs:556:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let minus_B = &minus_one * &B; // = -B\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `minus_b`\u001b[0m\n\n"}
{"message":"72 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 72 warnings emitted\u001b[0m\n\n"}
