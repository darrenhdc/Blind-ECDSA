{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6","program":"/Users/hdcui/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cexpr","/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=bfc2f9f28127daa8","-C","extra-filename=-bfc2f9f28127daa8","--out-dir","/Users/hdcui/NIZKs-for-AsiaCCS19-and-HSM-CL/bld_sig/target/rls/debug/deps","-L","dependency=/Users/hdcui/NIZKs-for-AsiaCCS19-and-HSM-CL/bld_sig/target/rls/debug/deps","--extern","nom=/Users/hdcui/NIZKs-for-AsiaCCS19-and-HSM-CL/bld_sig/target/rls/debug/deps/libnom-aa81c9f5c4b16380.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/hdcui/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/hdcui/NIZKs-for-AsiaCCS19-and-HSM-CL/bld_sig/target/rls/debug/deps/libcexpr-bfc2f9f28127daa8.rmeta"},"prelude":{"crate_id":{"name":"cexpr","disambiguator":[12035194459503083815,16853848212147596761]},"crate_root":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src","external_crates":[{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4532634516333805499,15827264943887709650]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16391569226461738429,2396501197197794813]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6581379148618454087,14557654066704198562]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15002797972794468225,1552711559034990603]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266537971243543179,9932497131885326183]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12433302035576608964,14843331431738146314]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12879753800366072301,15634893218748870197]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[871993089839721140,4255527807152046989]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[3647936590872438381,4893893150489999278]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10976154958785757182,17883745442996207364]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12543088350757445703,3442879468732634803]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[15573447528817193199,483222197062392413]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6010865286138026168,9367548366209168344]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[9784897484617007620,14674776224949800847]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9629926090994178847,12718026168620307260]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":16,"id":{"name":"nom","disambiguator":[13575094712651723358,13827171047383723478]}},{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","num":17,"id":{"name":"memchr","disambiguator":[7043069871699342084,9547664316765850946]}}],"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":344,"byte_end":1827,"line_start":9,"line_end":64,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":126},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":468,"byte_end":475,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"alias_span":null,"name":"IResult","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":16,"index":1256},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":476,"byte_end":482,"line_start":14,"line_end":14,"column_start":33,"column_end":39},"alias_span":null,"name":"Needed","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":16,"index":1274},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":483,"byte_end":486,"line_start":14,"line_end":14,"column_start":40,"column_end":43},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":16,"index":1069},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":487,"byte_end":496,"line_start":14,"line_end":14,"column_start":44,"column_end":53},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":4}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":344,"byte_end":1827,"line_start":9,"line_end":64,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":10},{"krate":0,"index":36},{"krate":0,"index":137},{"krate":0,"index":143},{"krate":0,"index":1381},{"krate":0,"index":1399},{"krate":0,"index":144},{"krate":0,"index":147}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":397,"byte_end":400,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"nom","qualname":"::nom","value":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9}],"decl_id":null,"docs":" nom's result types, re-exported.\n","sig":null,"attributes":[{"value":"/ nom's result types, re-exported.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":407,"byte_end":443,"line_start":13,"line_end":13,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"literal","qualname":"::literal","value":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":151},{"krate":0,"index":168},{"krate":0,"index":167},{"krate":0,"index":165},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":174},{"krate":0,"index":351},{"krate":0,"index":419},{"krate":0,"index":464},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":542},{"krate":0,"index":788},{"krate":0,"index":793},{"krate":0,"index":813},{"krate":0,"index":993},{"krate":0,"index":35}],"decl_id":null,"docs":" Parsing C literals from byte slices.\n \n This will parse a representation of a C literal into a Rust type.","sig":null,"attributes":[{"value":"/ Parsing C literals from byte slices.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2172,"byte_end":2212,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ ","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2213,"byte_end":2217,"line_start":9,"line_end":9,"column_start":1,"column_end":5}},{"value":"/ This will parse a representation of a C literal into a Rust type.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2218,"byte_end":2287,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2288,"byte_end":2291,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # characters","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2292,"byte_end":2308,"line_start":12,"line_end":12,"column_start":1,"column_end":17}},{"value":"/ Character literals are stored into the `CChar` type, which can hold values","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2309,"byte_end":2387,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ that are not valid Unicode code points. ASCII characters are represented as","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2388,"byte_end":2467,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ `char`, literal bytes with the high byte set are converted into the raw","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2468,"byte_end":2543,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ representation. Escape sequences are supported. If hex and octal escapes","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2544,"byte_end":2620,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ map to an ASCII character, that is used, otherwise, the raw encoding is","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2621,"byte_end":2696,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ used, including for values over 255. Unicode escapes are checked for","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2697,"byte_end":2769,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ validity and mapped to `char`. Character sequences are not supported. Width","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2770,"byte_end":2849,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ prefixes are ignored.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2850,"byte_end":2875,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2876,"byte_end":2879,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # strings","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2880,"byte_end":2893,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ Strings are interpreted as byte vectors. Escape sequences are supported. If","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2894,"byte_end":2973,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ hex and octal escapes map onto multi-byte characters, they are truncated to","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":2974,"byte_end":3053,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ one 8-bit character. Unicode escapes are converted into their UTF-8","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3054,"byte_end":3125,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ encoding. Width prefixes are ignored.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3126,"byte_end":3167,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3168,"byte_end":3171,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # integers","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3172,"byte_end":3186,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ Integers are read into `i64`. Binary, octal, decimal and hexadecimal are","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3187,"byte_end":3263,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ all supported. If the literal value is between `i64::MAX` and `u64::MAX`,","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3264,"byte_end":3341,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ it is bit-cast to `i64`. Values over `u64::MAX` cannot be parsed. Width and","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3342,"byte_end":3421,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ sign suffixes are ignored. Sign prefixes are not supported.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3422,"byte_end":3485,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3486,"byte_end":3489,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # real numbers","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3490,"byte_end":3508,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ Reals are read into `f64`. Width suffixes are ignored. Sign prefixes are","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3509,"byte_end":3585,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ not supported in the significand. Hexadecimal floating points are not","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3586,"byte_end":3659,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ supported.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3660,"byte_end":3674,"line_start":37,"line_end":37,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":152},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3912,"byte_end":3916,"line_start":50,"line_end":50,"column_start":2,"column_end":6},"name":"Char","qualname":"::literal::CChar::Char","value":"CChar::Char(char)","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" A character that can be represented as a `char`\n","sig":null,"attributes":[{"value":"/ A character that can be represented as a `char`","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3859,"byte_end":3910,"line_start":49,"line_end":49,"column_start":2,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":155},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3995,"byte_end":3998,"line_start":52,"line_end":52,"column_start":2,"column_end":5},"name":"Raw","qualname":"::literal::CChar::Raw","value":"CChar::Raw(u64)","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Any other character (8-bit characters, unicode surrogates, etc.)\n","sig":null,"attributes":[{"value":"/ Any other character (8-bit characters, unicode surrogates, etc.)","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3925,"byte_end":3993,"line_start":51,"line_end":51,"column_start":2,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":151},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3850,"byte_end":3855,"line_start":48,"line_end":48,"column_start":10,"column_end":15},"name":"CChar","qualname":"::literal::CChar","value":"pub enum CChar {\n\n    /// A character that can be represented as a `char`\n    Char(char),\n\n    /// Any other character (8-bit characters, unicode surrogates, etc.)\n    Raw(u64),\n}","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":155}],"decl_id":null,"docs":" Representation of a C character\n","sig":null,"attributes":[{"value":"/ Representation of a C character","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":3805,"byte_end":3840,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":10452,"byte_end":10457,"line_start":271,"line_end":271,"column_start":8,"column_end":13},"name":"parse","qualname":"::literal::parse","value":"pub fn parse(&[u8]) -> IResult<&[u8], EvalResult, ::Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse a C literal.","sig":null,"attributes":[{"value":"/ Parse a C literal.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":10283,"byte_end":10305,"line_start":267,"line_end":267,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":10306,"byte_end":10309,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ The input must contain exactly the representation of a single literal","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":10310,"byte_end":10383,"line_start":269,"line_end":269,"column_start":1,"column_end":74}},{"value":"/ token, and in particular no whitespace or sign prefixes.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":10384,"byte_end":10444,"line_start":270,"line_end":270,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"expr","qualname":"::expr","value":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":2193},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1068},{"krate":0,"index":1075},{"krate":0,"index":1072},{"krate":0,"index":57},{"krate":0,"index":1077},{"krate":0,"index":1098},{"krate":0,"index":1096},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":1335}],"decl_id":null,"docs":" Evaluating C expressions from tokens.","sig":null,"attributes":[{"value":"/ Evaluating C expressions from tokens.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":10898,"byte_end":10939,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":10940,"byte_end":10943,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Numerical operators are supported. All numerical values are treated as","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":10944,"byte_end":11018,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ `i64` or `f64`. Type casting is not supported. `i64` are converted to","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11019,"byte_end":11092,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ `f64` when used in conjunction with a `f64`. Right shifts are always","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11093,"byte_end":11165,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ arithmetic shifts.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11166,"byte_end":11188,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11189,"byte_end":11192,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `sizeof` operator is not supported.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11193,"byte_end":11236,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11237,"byte_end":11240,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ String concatenation is supported, but width prefixes are ignored; all","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11241,"byte_end":11315,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ strings are treated as narrow strings.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11316,"byte_end":11358,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11359,"byte_end":11362,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Use the `IdentifierParser` to substitute identifiers found in expressions.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11363,"byte_end":11441,"line_start":20,"line_end":20,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11795,"byte_end":11811,"line_start":32,"line_end":32,"column_start":12,"column_end":28},"name":"IdentifierParser","qualname":"::expr::IdentifierParser","value":"IdentifierParser {  }","parent":null,"children":[{"krate":0,"index":1064}],"decl_id":null,"docs":" Expression parser/evaluator that supports identifiers.\n","sig":null,"attributes":[{"value":"/ Expression parser/evaluator that supports identifiers.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11708,"byte_end":11766,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11950,"byte_end":11957,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"name":"CResult","qualname":"::expr::CResult","value":"IResult<&'a [Token], R, ::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12120,"byte_end":12123,"line_start":43,"line_end":43,"column_start":2,"column_end":5},"name":"Int","qualname":"::expr::EvalResult::Int","value":"EvalResult::Int(Wrapping<i64>)","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12141,"byte_end":12146,"line_start":44,"line_end":44,"column_start":2,"column_end":7},"name":"Float","qualname":"::expr::EvalResult::Float","value":"EvalResult::Float(f64)","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12154,"byte_end":12158,"line_start":45,"line_end":45,"column_start":2,"column_end":6},"name":"Char","qualname":"::expr::EvalResult::Char","value":"EvalResult::Char(CChar)","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12168,"byte_end":12171,"line_start":46,"line_end":46,"column_start":2,"column_end":5},"name":"Str","qualname":"::expr::EvalResult::Str","value":"EvalResult::Str(Vec<u8>)","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12183,"byte_end":12190,"line_start":47,"line_end":47,"column_start":2,"column_end":9},"name":"Invalid","qualname":"::expr::EvalResult::Invalid","value":"EvalResult::Invalid","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12106,"byte_end":12116,"line_start":42,"line_end":42,"column_start":10,"column_end":20},"name":"EvalResult","qualname":"::expr::EvalResult","value":"pub enum EvalResult {\n    Int(Wrapping<i64>),\n    Float(f64),\n    Char(CChar),\n    Str(Vec<u8>),\n    Invalid,\n}","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1090}],"decl_id":null,"docs":" The result of parsing a literal or evaluating an expression.\n","sig":null,"attributes":[{"value":"/ The result of parsing a literal or evaluating an expression.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":11999,"byte_end":12063,"line_start":40,"line_end":40,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24246,"byte_end":24249,"line_start":496,"line_end":496,"column_start":9,"column_end":12},"name":"new","qualname":"<IdentifierParser>::new","value":"pub fn new(&HashMap<Vec<u8>, EvalResult>) -> IdentifierParser","parent":null,"children":[],"decl_id":null,"docs":" Create a new `IdentifierParser` with a set of known identifiers. When\n a known identifier is encountered during parsing, it is substituted\n for the value specified.\n","sig":null,"attributes":[{"value":"/ Create a new `IdentifierParser` with a set of known identifiers. When","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24061,"byte_end":24134,"line_start":493,"line_end":493,"column_start":2,"column_end":75}},{"value":"/ a known identifier is encountered during parsing, it is substituted","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24136,"byte_end":24207,"line_start":494,"line_end":494,"column_start":2,"column_end":73}},{"value":"/ for the value specified.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24209,"byte_end":24237,"line_start":495,"line_end":495,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24575,"byte_end":24579,"line_start":504,"line_end":504,"column_start":9,"column_end":13},"name":"expr","qualname":"<IdentifierParser>::expr","value":"pub fn expr<'a>(&Self, &'a [Token]) -> CResult","parent":null,"children":[],"decl_id":null,"docs":" Parse and evalute an expression of a list of tokens.","sig":null,"attributes":[{"value":"/ Parse and evalute an expression of a list of tokens.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24364,"byte_end":24420,"line_start":500,"line_end":500,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24422,"byte_end":24425,"line_start":501,"line_end":501,"column_start":2,"column_end":5}},{"value":"/ Returns an error if the input is not a valid expression or if the token","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24427,"byte_end":24502,"line_start":502,"line_end":502,"column_start":2,"column_end":77}},{"value":"/ stream contains comments, keywords or unknown identifiers.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24504,"byte_end":24566,"line_start":503,"line_end":503,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25540,"byte_end":25556,"line_start":528,"line_end":528,"column_start":9,"column_end":25},"name":"macro_definition","qualname":"<IdentifierParser>::macro_definition","value":"pub fn macro_definition<'a>(&Self, &'a [Token]) -> CResult","parent":null,"children":[],"decl_id":null,"docs":" Parse and evaluate a macro definition from of a list of tokens.","sig":null,"attributes":[{"value":"/ Parse and evaluate a macro definition from of a list of tokens.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24673,"byte_end":24740,"line_start":508,"line_end":508,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24742,"byte_end":24745,"line_start":509,"line_end":509,"column_start":2,"column_end":5}},{"value":"/ Returns the identifier for the macro and its replacement evaluated as an","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24747,"byte_end":24823,"line_start":510,"line_end":510,"column_start":2,"column_end":78}},{"value":"/ expression. The input should not include `#define`.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24825,"byte_end":24880,"line_start":511,"line_end":511,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24882,"byte_end":24885,"line_start":512,"line_end":512,"column_start":2,"column_end":5}},{"value":"/ Returns an error if the replacement is not a valid expression, if called","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24887,"byte_end":24963,"line_start":513,"line_end":513,"column_start":2,"column_end":78}},{"value":"/ on most function-like macros, or if the token stream contains comments,","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":24965,"byte_end":25040,"line_start":514,"line_end":514,"column_start":2,"column_end":77}},{"value":"/ keywords or unknown identifiers.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25042,"byte_end":25078,"line_start":515,"line_end":515,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25080,"byte_end":25083,"line_start":516,"line_end":516,"column_start":2,"column_end":5}},{"value":"/ N.B. This is intended to fail on function-like macros, but if it the","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25085,"byte_end":25157,"line_start":517,"line_end":517,"column_start":2,"column_end":74}},{"value":"/ macro takes a single argument, the argument name is defined as an","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25159,"byte_end":25228,"line_start":518,"line_end":518,"column_start":2,"column_end":71}},{"value":"/ identifier, and the macro otherwise parses as an expression, it will","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25230,"byte_end":25302,"line_start":519,"line_end":519,"column_start":2,"column_end":74}},{"value":"/ return a result even on function-like macros.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25304,"byte_end":25353,"line_start":520,"line_end":520,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25355,"byte_end":25358,"line_start":521,"line_end":521,"column_start":2,"column_end":5}},{"value":"/ ```c","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25360,"byte_end":25368,"line_start":522,"line_end":522,"column_start":2,"column_end":10}},{"value":"/ // will evaluate into IDENTIFIER","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25370,"byte_end":25406,"line_start":523,"line_end":523,"column_start":2,"column_end":38}},{"value":"/ #define DELETE(IDENTIFIER)","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25408,"byte_end":25438,"line_start":524,"line_end":524,"column_start":2,"column_end":32}},{"value":"/ // will evaluate into IDENTIFIER-3","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25440,"byte_end":25478,"line_start":525,"line_end":525,"column_start":2,"column_end":40}},{"value":"/ #define NEGATIVE_THREE(IDENTIFIER)  -3","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25480,"byte_end":25522,"line_start":526,"line_end":526,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25524,"byte_end":25531,"line_start":527,"line_end":527,"column_start":2,"column_end":9}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25894,"byte_end":25898,"line_start":537,"line_end":537,"column_start":8,"column_end":12},"name":"expr","qualname":"::expr::expr","value":"pub fn expr<'a>(&'a [Token]) -> CResult","parent":null,"children":[],"decl_id":null,"docs":" Parse and evalute an expression of a list of tokens.","sig":null,"attributes":[{"value":"/ Parse and evalute an expression of a list of tokens.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25695,"byte_end":25751,"line_start":533,"line_end":533,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25752,"byte_end":25755,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the input is not a valid expression or if the token","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25756,"byte_end":25831,"line_start":535,"line_end":535,"column_start":1,"column_end":76}},{"value":"/ stream contains comments, keywords or identifiers.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":25832,"byte_end":25886,"line_start":536,"line_end":536,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":135},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26400,"byte_end":26416,"line_start":549,"line_end":549,"column_start":8,"column_end":24},"name":"macro_definition","qualname":"::expr::macro_definition","value":"pub fn macro_definition<'a>(&'a [Token]) -> CResult","parent":null,"children":[],"decl_id":null,"docs":" Parse and evaluate a macro definition from of a list of tokens.","sig":null,"attributes":[{"value":"/ Parse and evaluate a macro definition from of a list of tokens.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26006,"byte_end":26073,"line_start":541,"line_end":541,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26074,"byte_end":26077,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ Returns the identifier for the macro and its replacement evaluated as an","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26078,"byte_end":26154,"line_start":543,"line_end":543,"column_start":1,"column_end":77}},{"value":"/ expression. The input should not include `#define`.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26155,"byte_end":26210,"line_start":544,"line_end":544,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26211,"byte_end":26214,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ Returns an error if the replacement is not a valid expression, if called","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26215,"byte_end":26291,"line_start":546,"line_end":546,"column_start":1,"column_end":77}},{"value":"/ on a function-like macro, or if the token stream contains comments,","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26292,"byte_end":26363,"line_start":547,"line_end":547,"column_start":1,"column_end":72}},{"value":"/ keywords or identifiers.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":26364,"byte_end":26392,"line_start":548,"line_end":548,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":27996,"byte_end":28016,"line_start":593,"line_end":593,"column_start":6,"column_end":26},"name":"fn_macro_declaration","qualname":"::expr::fn_macro_declaration","value":"pub fn fn_macro_declaration(&[Token])\n-> ::nom::IResult<&[Token], (&[u8], Vec<&[u8]>), ::Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse a functional macro declaration from a list of tokens.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::token","value":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1365},{"krate":0,"index":1364},{"krate":0,"index":1362},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1367},{"krate":0,"index":1379},{"krate":0,"index":1377},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":138},{"krate":0,"index":141}],"decl_id":null,"docs":" Representation of a C token","sig":null,"attributes":[{"value":"/ Representation of a C token","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28537,"byte_end":28568,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28569,"byte_end":28572,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is designed to map onto a libclang CXToken.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28573,"byte_end":28625,"line_start":10,"line_end":10,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28685,"byte_end":28696,"line_start":14,"line_end":14,"column_start":2,"column_end":13},"name":"Punctuation","qualname":"::token::Kind::Punctuation","value":"Kind::Punctuation","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28699,"byte_end":28706,"line_start":15,"line_end":15,"column_start":2,"column_end":9},"name":"Keyword","qualname":"::token::Kind::Keyword","value":"Kind::Keyword","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28709,"byte_end":28719,"line_start":16,"line_end":16,"column_start":2,"column_end":12},"name":"Identifier","qualname":"::token::Kind::Identifier","value":"Kind::Identifier","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28722,"byte_end":28729,"line_start":17,"line_end":17,"column_start":2,"column_end":9},"name":"Literal","qualname":"::token::Kind::Literal","value":"Kind::Literal","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28732,"byte_end":28739,"line_start":18,"line_end":18,"column_start":2,"column_end":9},"name":"Comment","qualname":"::token::Kind::Comment","value":"Kind::Comment","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28677,"byte_end":28681,"line_start":13,"line_end":13,"column_start":10,"column_end":14},"name":"Kind","qualname":"::token::Kind","value":"pub enum Kind { Punctuation, Keyword, Identifier, Literal, Comment, }","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28791,"byte_end":28796,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"Token { kind, raw }","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28807,"byte_end":28811,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"kind","qualname":"::token::Token::kind","value":"token::Kind","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28827,"byte_end":28830,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"raw","qualname":"::token::Token::raw","value":"std::boxed::Box<[u8]>","parent":{"krate":0,"index":1367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":29083,"byte_end":29098,"line_start":37,"line_end":37,"column_start":8,"column_end":23},"name":"remove_comments","qualname":"::token::remove_comments","value":"pub fn remove_comments(&mut Vec<Token>) -> &mut Vec<Token>","parent":null,"children":[],"decl_id":null,"docs":" Remove all comment tokens from a vector of tokens\n","sig":null,"attributes":[{"value":"/ Remove all comment tokens from a vector of tokens","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":29022,"byte_end":29075,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":674,"byte_end":684,"line_start":26,"line_end":26,"column_start":2,"column_end":12},"name":"ExactToken","qualname":"::Error::ExactToken","value":"Error::ExactToken(token::Kind, &'static [u8])","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Expected the specified token\n","sig":null,"attributes":[{"value":"/ Expected the specified token","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":640,"byte_end":672,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":759,"byte_end":770,"line_start":28,"line_end":28,"column_start":2,"column_end":13},"name":"ExactTokens","qualname":"::Error::ExactTokens","value":"Error::ExactTokens(token::Kind, &'static [&'static str])","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Expected one of the specified tokens\n","sig":null,"attributes":[{"value":"/ Expected one of the specified tokens","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":717,"byte_end":757,"line_start":27,"line_end":27,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":857,"byte_end":867,"line_start":30,"line_end":30,"column_start":2,"column_end":12},"name":"TypedToken","qualname":"::Error::TypedToken","value":"Error::TypedToken(token::Kind)","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" Expected a token of the specified kind\n","sig":null,"attributes":[{"value":"/ Expected a token of the specified kind","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":813,"byte_end":855,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":929,"byte_end":946,"line_start":32,"line_end":32,"column_start":2,"column_end":19},"name":"UnknownIdentifier","qualname":"::Error::UnknownIdentifier","value":"Error::UnknownIdentifier","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" An unknown identifier was encountered\n","sig":null,"attributes":[{"value":"/ An unknown identifier was encountered","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":886,"byte_end":927,"line_start":31,"line_end":31,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1122,"byte_end":1136,"line_start":37,"line_end":37,"column_start":2,"column_end":16},"name":"InvalidLiteral","qualname":"::Error::InvalidLiteral","value":"Error::InvalidLiteral","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" An invalid literal was encountered.","sig":null,"attributes":[{"value":"/ An invalid literal was encountered.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":952,"byte_end":991,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":996,"byte_end":999,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ When encountered, this generally means a bug exists in the data that","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1004,"byte_end":1076,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ was passed in or the parsing logic.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1081,"byte_end":1120,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1225,"byte_end":1232,"line_start":39,"line_end":39,"column_start":5,"column_end":12},"name":"Partial","qualname":"::Error::Partial","value":"Error::Partial","parent":{"krate":0,"index":1381},"children":[],"decl_id":null,"docs":" A full parse was requested, but data was left over after parsing finished.\n","sig":null,"attributes":[{"value":"/ A full parse was requested, but data was left over after parsing finished.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1142,"byte_end":1220,"line_start":38,"line_end":38,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":628,"byte_end":633,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n\n    /// Expected the specified token\n    ExactToken(token::Kind, &'static [u8]),\n\n    /// Expected one of the specified tokens\n    ExactTokens(token::Kind, &'static [&'static str]),\n\n    /// Expected a token of the specified kind\n    TypedToken(token::Kind),\n\n    /// An unknown identifier was encountered\n    UnknownIdentifier,\n\n    /// An invalid literal was encountered.\n    ///\n    /// When encountered, this generally means a bug exists in the data that\n    /// was passed in or the parsing logic.\n    InvalidLiteral,\n\n    /// A full parse was requested, but data was left over after parsing finished.\n    Partial,\n}","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397}],"decl_id":null,"docs":" Parsing errors specific to C parsing\n","sig":null,"attributes":[{"value":"/ Parsing errors specific to C parsing","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":578,"byte_end":618,"line_start":23,"line_end":23,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1504,"byte_end":1521,"line_start":54,"line_end":54,"column_start":8,"column_end":25},"name":"assert_full_parse","qualname":"::assert_full_parse","value":"pub fn assert_full_parse<I, O, E>(IResult<&[I], O, E>)\n-> IResult<&[I], O, ::Error> where Error: From<E>","parent":null,"children":[],"decl_id":null,"docs":" If the input result indicates a succesful parse, but there is data left,\n return an `Error::Partial` instead.\n","sig":null,"attributes":[{"value":"/ If the input result indicates a succesful parse, but there is data left,","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1380,"byte_end":1456,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ return an `Error::Partial` instead.","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1457,"byte_end":1496,"line_start":53,"line_end":53,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":4026,"byte_end":4031,"line_start":55,"line_end":55,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":4236,"byte_end":4241,"line_start":65,"line_end":65,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12404,"byte_end":12414,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12756,"byte_end":12766,"line_start":77,"line_end":77,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":15391,"byte_end":15401,"line_start":176,"line_end":176,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":15758,"byte_end":15768,"line_start":188,"line_end":188,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":15982,"byte_end":15992,"line_start":196,"line_end":196,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":16207,"byte_end":16217,"line_start":205,"line_end":205,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":16430,"byte_end":16440,"line_start":214,"line_end":214,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":16794,"byte_end":16804,"line_start":226,"line_end":226,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17158,"byte_end":17168,"line_start":238,"line_end":238,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17522,"byte_end":17532,"line_start":250,"line_end":250,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17756,"byte_end":17766,"line_start":259,"line_end":259,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17990,"byte_end":18000,"line_start":268,"line_end":268,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":19060,"byte_end":19064,"line_start":301,"line_end":301,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1148},{"krate":0,"index":1165},{"krate":0,"index":1182},{"krate":0,"index":1204},{"krate":0,"index":1224},{"krate":0,"index":1244},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":21832,"byte_end":21836,"line_start":418,"line_end":418,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":1264},{"krate":0,"index":1286},{"krate":0,"index":1304},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":23869,"byte_end":23873,"line_start":481,"line_end":481,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":23987,"byte_end":24003,"line_start":488,"line_end":488,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28882,"byte_end":28887,"line_start":27,"line_end":27,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1256,"byte_end":1261,"line_start":42,"line_end":42,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":509,"byte_end":516,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":526,"byte_end":530,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":540,"byte_end":545,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":137}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":4026,"byte_end":4031,"line_start":55,"line_end":55,"column_start":19,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/literal.rs","byte_start":4236,"byte_end":4241,"line_start":65,"line_end":65,"column_start":24,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":151},"to":{"krate":2,"index":1953}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12404,"byte_end":12414,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":12756,"byte_end":12766,"line_start":77,"line_end":77,"column_start":24,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":15391,"byte_end":15401,"line_start":176,"line_end":176,"column_start":40,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2134}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":15758,"byte_end":15768,"line_start":188,"line_end":188,"column_start":43,"column_end":53},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2186}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":15982,"byte_end":15992,"line_start":196,"line_end":196,"column_start":42,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2190}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":16207,"byte_end":16217,"line_start":205,"line_end":205,"column_start":43,"column_end":53},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2194}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":16430,"byte_end":16440,"line_start":214,"line_end":214,"column_start":40,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":16794,"byte_end":16804,"line_start":226,"line_end":226,"column_start":40,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17158,"byte_end":17168,"line_start":238,"line_end":238,"column_start":40,"column_end":50},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2150}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17522,"byte_end":17532,"line_start":250,"line_end":250,"column_start":40,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2198}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17756,"byte_end":17766,"line_start":259,"line_end":259,"column_start":40,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2203}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":17990,"byte_end":18000,"line_start":268,"line_end":268,"column_start":40,"column_end":50},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2138}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":19060,"byte_end":19064,"line_start":301,"line_end":301,"column_start":10,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":21832,"byte_end":21836,"line_start":418,"line_end":418,"column_start":10,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":23869,"byte_end":23873,"line_start":481,"line_end":481,"column_start":32,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/expr.rs","byte_start":23987,"byte_end":24003,"line_start":488,"line_end":488,"column_start":14,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/token.rs","byte_start":28882,"byte_end":28887,"line_start":27,"line_end":27,"column_start":37,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1367},"to":{"krate":2,"index":1956}},{"span":{"file_name":"/Users/hdcui/.cargo/registry/src/github.com-1ecc6299db9ec823/cexpr-0.3.6/src/lib.rs","byte_start":1256,"byte_end":1261,"line_start":42,"line_end":42,"column_start":20,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1381},"to":{"krate":2,"index":1956}}]}